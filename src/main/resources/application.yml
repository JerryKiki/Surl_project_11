# .yml cannot read UTF-8, so I wrote some explanations in English.
server:
  port: 8070
spring:
  output:
    ansi:
      enabled: always
  profiles:
    active: dev
    include: secret
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.session.SessionAutoConfiguration
      # this setting makes inactive autoconfigure for redis in my local PC (because redis is on EC2 only)
  datasource:
    # When you change DB, you don't have to modify source code... JPA will automatically make query which match to your DB.
    # You just need to change build.gradle file and 'datasource' section of setting files (application.yml things).
    ### h2 ###
    # when we use the h2 db, we can connect to this db with url "localhost:{your_spring_port_num}/h2-console"
    # and then put url here in 'url' section on page, we can use query editor on our browser.
    # warning : in this case, it works only when spring boot server is running.
    url: jdbc:h2:./db_dev;MODE=MySQL #H2 can pretend like other DB(this case, MySQL)
    username: sa
    password:
    driver-calss-name: org.h2.Driver
  # jackson's default setting occurs exception when express empty beans to json, so turned-off that setting with code below.
  jackson:
    serialization:
      fail-on-empty-beans: false
  jpa:
    # This setting shutdown auto connection with database, because when it is 'true', all tasks try to connect DB and it is inefficient.
    # With this setting, You should make all methods of controllers "@Transactional" or "@Transactional(readOnly=true)"
    # which means this controller will connect with DB.
    # When you make SpringBoot REST API, shutdown OSIV is recommended, because you don't need to make JSP or thymeleaf View.
    # But if you want to make View file with SpringBoot, not just REST API, then you should turn on this setting.
    open-in-view: false
    hibernate:
      # This setting makes JPA to make all entity classes in every execution of the springboot server.
      ddl-auto: update
    # This setting makes console to show sql logs which JPA sent.
    properties:
      hibernate:
        format_sql: true
        highlight_sql: ture
        use_sql_comments: true
# This setting makes console to show sql logs which JPA sent.
logging:
  level:
    com.koreait.surl_project_11: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
custom:
  site:
    name: "My Site"